<!DOCTYPE html>

<!-- Referencias a componentes UI de JSF -->
<html lang="en"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core">
	
	<!-- Cuando esta página o vista se cargue por primera vez, se ejecutará el metodo "loadStudents" del
	     bean de JSF "studentController". Este método obtiene los estudiantes de la base de datos y los almacena
	     en memoria en la propiedad "students" del bean de JSF "studentController". -->
	<f:metadata>
		<!-- code will run when page first loaded  -->
		<f:event type="preRenderView" listener="#{studentController.loadStudents()}" />
	</f:metadata>
	
	<h:head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	
		<title>Student Tracker App</title>
		
		<!-- Forma de cargar un archivo CSS mediante JSF -->
		<!-- El archivo tiene que estar en la ruta "/webapp/resources/css" -->
		<h:outputStylesheet library="css" name="style.css" />
	</h:head>
	
	<h:body>
		<div id="wrapper">
			<div id="header">
				<h2>FooBar University</h2>
			</div>
		</div>
		
		<div id="container">
			<div id="content">
			
				<h:messages globalOnly="true" />
				
				<!-- outcome="add-student-form" -> JSF will show "add-student-form.xhtml" -->
				<h:button value="Add Student" styleClass="add-student-button" outcome="add-student-form" />
				
				<!-- Crea una tabla mediante componentes de JSF -->
				<!-- Este componente de JSF también itera sobre una colección (array, lista, ...) -->
				<!-- "styleClass" -> Aplica clases css a la tabla; "headerClass" -> Aplica clases css a la cabecera de la tabla; "rowClasses" -> Aplica clases css a las filas de la tabla -->
				<!-- Nota: El componente de JSF "commandLink" requiere estar dentro de un formulario de JSF para ser usado -->	
				<h:form>
					<h:dataTable var="tempStudent" value="#{studentController.students}"
						styleClass="demo-table" headerClass="demo-table-header" rowClasses="demo-table-odd-row,demo-table-even-row">
				
						<!-- Columna para el nombre -->
						<h:column>
							<!-- the column header -->
							<f:facet name="header">First Name</f:facet>
							
							<!-- the value of each row -->
							#{tempStudent.firstName}
						</h:column>
						
						<!-- Columna para el apellido -->
						<h:column>
							<!-- the column header -->
							<f:facet name="header">Last Name</f:facet>
							
							<!-- the value of each row -->
							#{tempStudent.lastName}
						</h:column>
						
						<!-- Columna para el email -->
						<h:column>
							<!-- the column header -->
							<f:facet name="header">Email</f:facet>
							
							<!-- the value of each row -->
							#{tempStudent.email}
						</h:column>
						
						<!-- Columna para la acción -->
						<h:column>
							<!-- the column header -->
							<f:facet name="header">Action</f:facet>
							
							<!-- the value of each row -->
							<h:commandLink value="Update" action="#{studentController.loadStudent(tempStudent.id)}" />
							|
							<h:commandLink value="Delete" action="#{studentController.deleteStudent(tempStudent.id)}"
								onclick="return confirm('Are you sure you want to delete this student?')" />
						</h:column>
					</h:dataTable>
				</h:form>
			</div>
		</div>
	</h:body>
</html>